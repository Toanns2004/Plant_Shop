{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/auth/\";\nconst login = (username, password) => {\n  return axios.post(API_URL + \"login\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.token) {\n      sessionStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  }).catch(error => {\n    console.error(\"auth login err: \", error);\n  });\n};\nconst logout = () => {\n  sessionStorage.removeItem('user');\n};\nconst register = (username, fullname, email, phone, password) => {\n  return axios.post(API_URL + \"register\", {\n    username,\n    fullname,\n    email,\n    phone,\n    password\n  });\n};\nconst changePassword = (token, currentPassword, newPassword) => {\n  return axios.post(API_URL + \"change-password\", {\n    token,\n    currentPassword,\n    newPassword\n  });\n};\nconst updateImage = (formData, axiosConfig) => {\n  return axios.put(API_URL + \"change-image\", formData, axiosConfig);\n};\nconst updateInfo = (formData, axiosConfig) => {\n  return axios.put(API_URL + \"change-info\", formData, axiosConfig);\n};\nconst getCurrentUser = () => {\n  return JSON.parse(sessionStorage.getItem('user'));\n};\nconst authService = {\n  login,\n  logout,\n  register,\n  changePassword,\n  updateImage,\n  updateInfo,\n  getCurrentUser\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","login","username","password","post","then","response","data","token","sessionStorage","setItem","JSON","stringify","catch","error","console","logout","removeItem","register","fullname","email","phone","changePassword","currentPassword","newPassword","updateImage","formData","axiosConfig","put","updateInfo","getCurrentUser","parse","getItem","authService"],"sources":["/Users/hungphung/Desktop/Aptech/SEM2-eProject/webapp/src/services/auth-service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/auth/\";\n\nconst login = (username, password) => {\n    return axios.post(API_URL + \"login\", {\n        username,\n        password\n    })\n        .then(response => {\n            if (response.data.token) {\n                sessionStorage.setItem('user', JSON.stringify(response.data));\n            }\n            return response.data;\n        }).catch(error => {\n            console.error(\"auth login err: \", error);\n        });\n\n}\n\nconst logout = () => {\n    sessionStorage.removeItem('user');\n}\n\nconst register = (username, fullname, email, phone, password) => {\n    return axios.post(API_URL + \"register\", {\n        username,\n        fullname,\n        email,\n        phone,\n        password\n    });\n};\nconst changePassword = (token, currentPassword, newPassword) => {\n    return axios.post(API_URL+\"change-password\", {\n        token,\n        currentPassword,\n        newPassword\n    })\n}\nconst updateImage = (formData, axiosConfig) => {\n    return axios.put(API_URL+\"change-image\", formData, axiosConfig)\n}\nconst updateInfo = (formData, axiosConfig) => {\n    return axios.put(API_URL+\"change-info\", formData, axiosConfig)\n}\n\nconst getCurrentUser = () => {\n    return JSON.parse(sessionStorage.getItem('user'));\n}\n\n\nconst authService = {\n    login,\n    logout,\n    register,\n    changePassword,\n    updateImage,\n    updateInfo,\n    getCurrentUser,\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAClC,OAAOJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAE;IACjCE,QAAQ;IACRC;EACJ,CAAC,CAAC,CACGE,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;MACrBC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjE;IACA,OAAOD,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CAACM,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC5C,CAAC,CAAC;AAEV,CAAC;AAED,MAAME,MAAM,GAAGA,CAAA,KAAM;EACjBP,cAAc,CAACQ,UAAU,CAAC,MAAM,CAAC;AACrC,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAChB,QAAQ,EAAEiB,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAElB,QAAQ,KAAK;EAC7D,OAAOJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAE;IACpCE,QAAQ;IACRiB,QAAQ;IACRC,KAAK;IACLC,KAAK;IACLlB;EACJ,CAAC,CAAC;AACN,CAAC;AACD,MAAMmB,cAAc,GAAGA,CAACd,KAAK,EAAEe,eAAe,EAAEC,WAAW,KAAK;EAC5D,OAAOzB,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAC,iBAAiB,EAAE;IACzCQ,KAAK;IACLe,eAAe;IACfC;EACJ,CAAC,CAAC;AACN,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;EAC3C,OAAO5B,KAAK,CAAC6B,GAAG,CAAC5B,OAAO,GAAC,cAAc,EAAE0B,QAAQ,EAAEC,WAAW,CAAC;AACnE,CAAC;AACD,MAAME,UAAU,GAAGA,CAACH,QAAQ,EAAEC,WAAW,KAAK;EAC1C,OAAO5B,KAAK,CAAC6B,GAAG,CAAC5B,OAAO,GAAC,aAAa,EAAE0B,QAAQ,EAAEC,WAAW,CAAC;AAClE,CAAC;AAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAOnB,IAAI,CAACoB,KAAK,CAACtB,cAAc,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,CAAC;AAGD,MAAMC,WAAW,GAAG;EAChBhC,KAAK;EACLe,MAAM;EACNE,QAAQ;EACRI,cAAc;EACdG,WAAW;EACXI,UAAU;EACVC;AACJ,CAAC;AAED,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}